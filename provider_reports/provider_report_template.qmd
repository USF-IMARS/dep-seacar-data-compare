---
title: "AOML_WQ_3 Report"
description: DEP Water Quality Data Report
code-fold: true
params: 
  provider_id: AOML_WQ_3  # must be "AOML_WQ_3"
---

```{r}
#| label: import libraries & functions
#| code-summary: (code) import libraries & functions
#| message: false
#| warning: false

if (!requireNamespace("librarian", quietly = TRUE)) {
  install.packages("librarian")
}
librarian::shelf(
  dplyr,
  ggplot2,
  glue,
  here,
  leaflet,
  readxl,
  sf,
  tidyverse,
  utils
)

source(here("R/getIMaRSData.R"))

DATA_ROOT <- here("./data/02-SEACAR_unzipped")
SEACAR_ID <- sub(".*_WQ_", "", params$provider_id)  # Extract the part after _WQ_
```

```{R}
# Load SEACAR file
# find the .txt file (could be `Continuous WQ - N.xt` or `Discrete - N.txt`)
txt_file <- list.files(
  path = glue("{DATA_ROOT}/{params$provider_id}/"), 
  pattern = "\\.txt$", 
  full.names = TRUE
)
seacar_data <- read_delim(
  txt_file,
  delim="|"
)

imars_data <- getIMaRSData(params$provider_id)
```

### Station Locations
```{r}
# Convert dataframes to sf objects, specifying the coordinate columns
# and keeping only one row for each ProgramLocationID
FCRUWQD_sf <- st_as_sf(
  distinct(imars_data, ProgramLocationID, .keep_all = TRUE), 
  coords = c("OriginalLongitude", "OriginalLatitude"), 
  crs = 4326
)
SEACAR_sf <- st_as_sf(
  distinct(seacar_data, ProgramLocationID, .keep_all = TRUE), 
  coords = c("OriginalLongitude", "OriginalLatitude"), 
  crs = 4326
)

# Create a leaflet map
leaflet() %>%
  # Add FCRUWQD points with popups showing station names
  addTiles() %>%
  addCircleMarkers(
    data = FCRUWQD_sf,
    color = "blue", 
    radius = 5,
    popup = ~paste("Station:", FCRUWQD_unique$ProgramLocationID)  # Display station name on click
  ) %>%
  # Add SEACAR points with popups showing station names
  addCircleMarkers(
    data = SEACAR_sf,
    color = "red",
    radius = 5,
    popup = ~paste("Station:", SEACAR_unique$ProgramLocationID)  # Display station name on click
  ) %>%
  addLegend(
    position = "topright",
    colors = c("blue", "red"),
    labels = c("FCRUWQD Stations", "SEACAR Stations"),
    title = "Data Sources"
  )
```

### `ParameterName` values malignment
`ParameterName` columns have different values for same data.
Some columns appear to not exist in both.

```{R}
#| code-summary: print unique values for param name
cat(
  "=== FCRUWQD ==========================\n",
  unique(imars_data$ParameterName), "\n",
  "=== SEACAR ==========================\n",
  unique(seacar_data$ParameterName)
)
```


```{R}
# Count the number of points for each reporting provider in SEACAR and DEP data
seacar_count <- seacar_data %>%
  group_by(ParameterName) %>%
  summarise(count = n())

imars_count <- imars_data %>%
  group_by(ParameterName) %>%
  summarise(count = n())

# Combine and display the results
comparison_count <- full_join(seacar_count, imars_count, by = "ParameterName", suffix = c("_SEACAR", "_FCRUWQD"))

# TODO: print all rows here
comparison_count
```

### Site ID malignment
Site IDs in each are radically different:

```{R}
imars_sites <- sort(unique(imars_data$ProgramLocationID))
seacar_sites <- sort(unique(seacar_data$ProgramLocationID))

cat("=== FCRUWQD ==========================\n",
  imars_sites[1:25], "\n",
  "=== SEACAR ==========================\n",
  seacar_sites[1:25], "\n"
)

```

SEACAR data has many more site names

```{R}
print("=== FCRUWQD ==========================")
print(length(imars_sites))
print("=== SEACAR ==========================")
print(length(seacar_sites))

```

#### Alternative Site ID vs AreaID
SEACAR also has `AreaID`s, but these also do not align with Site IDs.
There are only 7 `AreaID`s.
```{r}
imars_sites <- sort(unique(imars_data$ProgramLocationID))
seacar_sites <- sort(unique(seacar_data$AreaID))

cat("=== FCRUWQD ==========================\n",
  imars_sites[1:25], "\n",
  "=== SEACAR ==========================\n",
  seacar_sites[1:25], "\n"
)
```


### TODO: compare specific stations
Cannot compare within stations until station number mapping is completed (see above section about station id malignment).


## compare distributions of nutrient data
### Ammonia distribution across all sites

```{R}
# Select relevant nutrient columns from SEACAR and DEP datasets
# Plot distributions side by side for SEACAR and FCRUWQD

# Combine the datasets with a new column to identify the source
combined_data <- bind_rows(
  seacar_data %>% 
    select(ParameterName, ResultValue) %>%
    filter(ParameterName == "Ammonium, Filtered (NH4)") %>% 
    mutate(Source = "SEACAR"),
  imars_data %>% 
    select(ParameterName, ResultValue) %>%
    filter(ParameterName == "Ammonium (N)") %>% 
    mutate(Source = "FCRUWQD")
)

# Plot side-by-side distributions with log-scaled x-axis
ggplot(combined_data, aes(x = ResultValue, fill = Source)) +
  geom_density(alpha = 0.5) +
  labs(title = "Ammonium Distributions: SEACAR vs FCRUWQD (Log Scale)",
       x = "Nutrient Value (Log Scale)",
       y = "Density",
       fill = "Source") +
  scale_x_log10() +   # Log scale on the x-axis
  theme_minimal()


```

