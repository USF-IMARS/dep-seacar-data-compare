[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Dep SEACAR data qc comparisons",
    "section": "",
    "text": "dep-seacar-imars-qc-compare\nComparison of IMaRS QC and SEACAR QC outputs for DEP project"
  },
  {
    "objectID": "provider_reports/provider_reports/BBWW_WQ_5077.html",
    "href": "provider_reports/provider_reports/BBWW_WQ_5077.html",
    "title": "BBWW_WQ_5077 Report",
    "section": "",
    "text": "(code) import libraries & functions\nif (!requireNamespace(\"librarian\", quietly = TRUE)) {\n  install.packages(\"librarian\")\n}\nlibrarian::shelf(\n  ggplot2,\n  glue,\n  here,\n  readxl,\n  tidyverse,\n  utils\n)\n\nsource(here(\"R/getIMaRSData.R\"))\n\nDATA_ROOT &lt;- here(\"./data/02-SEACAR_unzipped\")\nSEACAR_ID &lt;- sub(\".*_WQ_\", \"\", params$provider_id)  # Extract the part after _WQ_\n\n\n\n\nCode\n# Load SEACAR file\n# find the .txt file (could be `Continuous WQ - N.xt` or `Discrete - N.txt`)\ntxt_file &lt;- list.files(\n  path = glue(\"{DATA_ROOT}/{params$provider_id}/\"), \n  pattern = \"\\\\.txt$\", \n  full.names = TRUE\n)\nseacar_data &lt;- read_delim(\n  txt_file,\n  delim=\"|\"\n)\n\n\nRows: 4301969 Columns: 35\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \"|\"\nchr  (20): ProgramName, Habitat, IndicatorName, ParameterName, ParameterUnit...\ndbl  (13): RowID, ProgramID, IndicatorID, ParameterID, AreaID, ResultValue, ...\ndttm  (2): SampleDate, ExportVersion\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\nimars_data &lt;- getIMaRSData(params$provider_id)\n\n\nRows: 331523 Columns: 17\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (4): Source, Site, Parameter, Units\ndbl (13): ...1, Latitude, Longitude, Month, Day, Year, Value, Sample.Depth, ...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\nParameterName values malignment\nParameterName columns have different values for same data. Some columns appear to not exist in both.\n\n\nprint unique values for param name\ncat(\n  \"=== IMaRS ==========================\\n\",\n  unique(imars_data$ParameterName), \"\\n\",\n  \"=== SEACAR ==========================\\n\",\n  unique(seacar_data$ParameterName)\n)\n\n\n=== IMaRS ==========================\n Chlorophyll a Ammonium (N) Nitrate-Nitrite (N) Nitrite (N) Nitrate (N) Silica Orthophosphate (P) \n === SEACAR ==========================\n Water Temperature Dissolved Oxygen Saturation Dissolved Oxygen pH Salinity Turbidity\n\n\n\n\nCode\n# Count the number of points for each reporting provider in SEACAR and DEP data\nseacar_count &lt;- seacar_data %&gt;%\n  group_by(ParameterName) %&gt;%\n  summarise(count = n())\n\nimars_count &lt;- imars_data %&gt;%\n  group_by(ParameterName) %&gt;%\n  summarise(count = n())\n\n# Combine and display the results\ncomparison_count &lt;- full_join(seacar_count, imars_count, by = \"ParameterName\", suffix = c(\"_SEACAR\", \"_IMaRS\"))\ncomparison_count\n\n\n# A tibble: 13 × 3\n   ParameterName               count_SEACAR count_IMaRS\n   &lt;chr&gt;                              &lt;int&gt;       &lt;int&gt;\n 1 Dissolved Oxygen                  711227          NA\n 2 Dissolved Oxygen Saturation       715849          NA\n 3 Salinity                          703326          NA\n 4 Turbidity                         717001          NA\n 5 Water Temperature                 743078          NA\n 6 pH                                711488          NA\n 7 Ammonium (N)                          NA          30\n 8 Chlorophyll a                         NA          36\n 9 Nitrate (N)                           NA          28\n10 Nitrate-Nitrite (N)                   NA          28\n11 Nitrite (N)                           NA          21\n12 Orthophosphate (P)                    NA          15\n13 Silica                                NA          28\n\n\n\n\nAmmonia distribution across all sites\n\n\nCode\n# Select relevant nutrient columns from SEACAR and DEP datasets\n# Plot distributions side by side for SEACAR and IMaRS (DEP)\n\n# Combine the datasets with a new column to identify the source\ncombined_data &lt;- bind_rows(\n  seacar_data %&gt;% \n    select(ParameterName, ResultValue) %&gt;%\n    filter(ParameterName == \"Ammonium, Filtered (NH4)\") %&gt;% \n    mutate(Source = \"SEACAR\"),\n  imars_data %&gt;% \n    select(ParameterName, ResultValue) %&gt;%\n    filter(ParameterName == \"Ammonium (N)\") %&gt;% \n    mutate(Source = \"IMaRS\")\n)\n\n# Plot side-by-side distributions with log-scaled x-axis\nggplot(combined_data, aes(x = ResultValue, fill = Source)) +\n  geom_density(alpha = 0.5) +\n  labs(title = \"Ammonium Distributions: SEACAR vs IMaRS (Log Scale)\",\n       x = \"Nutrient Value (Log Scale)\",\n       y = \"Density\",\n       fill = \"Source\") +\n  scale_x_log10() +   # Log scale on the x-axis\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\nSite ID malignment\nSite IDs in each are radically different:\n\n\nCode\nimars_sites &lt;- sort(unique(imars_data$ProgramLocationID))\nseacar_sites &lt;- sort(unique(seacar_data$ProgramLocationID))\n\ncat(\"=== IMaRS ==========================\\n\",\n  imars_sites[1:5], \"\\n\",\n  \"=== SEACAR ==========================\\n\",\n  seacar_sites[1:5], \"\\n\"\n)\n\n\n=== IMaRS ==========================\n BB09 BB15 BB28 BB32 NA \n === SEACAR ==========================\n BBBB14 BBCWA4  BBJT71 BBLR03 BBMRDW \n\n\nSEACAR data has many more site names\n\n\nCode\nprint(\"=== IMaRS ==========================\")\n\n\n[1] \"=== IMaRS ==========================\"\n\n\nCode\nprint(length(imars_sites))\n\n\n[1] 4\n\n\nCode\nprint(\"=== SEACAR ==========================\")\n\n\n[1] \"=== SEACAR ==========================\"\n\n\nCode\nprint(length(seacar_sites))\n\n\n[1] 6\n\n\n\n\nTODO: compare specific stations\nCannot compare within stations until station number mapping is completed (see above section about station id malignment)."
  },
  {
    "objectID": "provider_reports/provider_reports/SERC_FKNMS_WQ_297.html",
    "href": "provider_reports/provider_reports/SERC_FKNMS_WQ_297.html",
    "title": "SERC_FKNMS_WQ_297 Report",
    "section": "",
    "text": "(code) import libraries & functions\nif (!requireNamespace(\"librarian\", quietly = TRUE)) {\n  install.packages(\"librarian\")\n}\nlibrarian::shelf(\n  ggplot2,\n  glue,\n  here,\n  readxl,\n  tidyverse,\n  utils\n)\n\nsource(here(\"R/getIMaRSData.R\"))\n\nDATA_ROOT &lt;- here(\"./data/02-SEACAR_unzipped\")\nSEACAR_ID &lt;- sub(\".*_WQ_\", \"\", params$provider_id)  # Extract the part after _WQ_\n\n\n\n\nCode\n# Load SEACAR file\n# find the .txt file (could be `Continuous WQ - N.xt` or `Discrete - N.txt`)\ntxt_file &lt;- list.files(\n  path = glue(\"{DATA_ROOT}/{params$provider_id}/\"), \n  pattern = \"\\\\.txt$\", \n  full.names = TRUE\n)\nseacar_data &lt;- read_delim(\n  txt_file,\n  delim=\"|\"\n)\n\n\nRows: 281276 Columns: 36\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \"|\"\nchr  (22): ProgramName, Habitat, IndicatorName, ParameterName, ParameterUnit...\ndbl  (12): RowID, ProgramID, IndicatorID, ParameterID, AreaID, ResultValue, ...\ndttm  (2): SampleDate, ExportVersion\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\nimars_data &lt;- getIMaRSData(params$provider_id)\n\n\nRows: 331523 Columns: 17\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (4): Source, Site, Parameter, Units\ndbl (13): ...1, Latitude, Longitude, Month, Day, Year, Value, Sample.Depth, ...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\nParameterName values malignment\nParameterName columns have different values for same data. Some columns appear to not exist in both.\n\n\nprint unique values for param name\ncat(\n  \"=== IMaRS ==========================\\n\",\n  unique(imars_data$ParameterName), \"\\n\",\n  \"=== SEACAR ==========================\\n\",\n  unique(seacar_data$ParameterName)\n)\n\n\n=== IMaRS ==========================\n  \n === SEACAR ==========================\n NO2+3, Filtered Turbidity Ammonium, Filtered (NH4) Dissolved Oxygen Saturation Dissolved Oxygen Light Extinction Coefficient Salinity Water Temperature pH Total Phosphorus Total Nitrogen Chlorophyll a, Uncorrected for Pheophytin Nitrite (NO2)\n\n\n\n\nCode\n# Count the number of points for each reporting provider in SEACAR and DEP data\nseacar_count &lt;- seacar_data %&gt;%\n  group_by(ParameterName) %&gt;%\n  summarise(count = n())\n\nimars_count &lt;- imars_data %&gt;%\n  group_by(ParameterName) %&gt;%\n  summarise(count = n())\n\n# Combine and display the results\ncomparison_count &lt;- full_join(seacar_count, imars_count, by = \"ParameterName\", suffix = c(\"_SEACAR\", \"_IMaRS\"))\ncomparison_count\n\n\n# A tibble: 13 × 3\n   ParameterName                             count_SEACAR count_IMaRS\n   &lt;chr&gt;                                            &lt;int&gt;       &lt;int&gt;\n 1 Ammonium, Filtered (NH4)                         26070          NA\n 2 Chlorophyll a, Uncorrected for Pheophytin        16171          NA\n 3 Dissolved Oxygen                                 32280          NA\n 4 Dissolved Oxygen Saturation                      25531          NA\n 5 Light Extinction Coefficient                     10436          NA\n 6 NO2+3, Filtered                                  20636          NA\n 7 Nitrite (NO2)                                     5776          NA\n 8 Salinity                                         31952          NA\n 9 Total Nitrogen                                   26749          NA\n10 Total Phosphorus                                 26833          NA\n11 Turbidity                                        26815          NA\n12 Water Temperature                                31913          NA\n13 pH                                                 114          NA\n\n\n\n\nAmmonia distribution across all sites\n\n\nCode\n# Select relevant nutrient columns from SEACAR and DEP datasets\n# Plot distributions side by side for SEACAR and IMaRS (DEP)\n\n# Combine the datasets with a new column to identify the source\ncombined_data &lt;- bind_rows(\n  seacar_data %&gt;% \n    select(ParameterName, ResultValue) %&gt;%\n    filter(ParameterName == \"Ammonium, Filtered (NH4)\") %&gt;% \n    mutate(Source = \"SEACAR\"),\n  imars_data %&gt;% \n    select(ParameterName, ResultValue) %&gt;%\n    filter(ParameterName == \"Ammonium (N)\") %&gt;% \n    mutate(Source = \"IMaRS\")\n)\n\n# Plot side-by-side distributions with log-scaled x-axis\nggplot(combined_data, aes(x = ResultValue, fill = Source)) +\n  geom_density(alpha = 0.5) +\n  labs(title = \"Ammonium Distributions: SEACAR vs IMaRS (Log Scale)\",\n       x = \"Nutrient Value (Log Scale)\",\n       y = \"Density\",\n       fill = \"Source\") +\n  scale_x_log10() +   # Log scale on the x-axis\n  theme_minimal()\n\n\nWarning in transformation$transform(x): NaNs produced\n\n\nWarning in scale_x_log10(): log-10 transformation introduced infinite values.\n\n\nWarning: Removed 30 rows containing non-finite outside the scale range\n(`stat_density()`).\n\n\n\n\n\n\n\n\n\n\n\nSite ID malignment\nSite IDs in each are radically different:\n\n\nCode\nimars_sites &lt;- sort(unique(imars_data$ProgramLocationID))\nseacar_sites &lt;- sort(unique(seacar_data$ProgramLocationID))\n\ncat(\"=== IMaRS ==========================\\n\",\n  imars_sites[1:5], \"\\n\",\n  \"=== SEACAR ==========================\\n\",\n  seacar_sites[1:5], \"\\n\"\n)\n\n\n=== IMaRS ==========================\n NA NA NA NA NA \n === SEACAR ==========================\n 209 211 212 213 214 \n\n\nSEACAR data has many more site names\n\n\nCode\nprint(\"=== IMaRS ==========================\")\n\n\n[1] \"=== IMaRS ==========================\"\n\n\nCode\nprint(length(imars_sites))\n\n\n[1] 0\n\n\nCode\nprint(\"=== SEACAR ==========================\")\n\n\n[1] \"=== SEACAR ==========================\"\n\n\nCode\nprint(length(seacar_sites))\n\n\n[1] 276\n\n\n\n\nTODO: compare specific stations\nCannot compare within stations until station number mapping is completed (see above section about station id malignment)."
  },
  {
    "objectID": "provider_reports/provider_reports/MIAMI_BEACH_WQ_4058.html",
    "href": "provider_reports/provider_reports/MIAMI_BEACH_WQ_4058.html",
    "title": "MIAMI_BEACH_WQ_4058 Report",
    "section": "",
    "text": "(code) import libraries & functions\nif (!requireNamespace(\"librarian\", quietly = TRUE)) {\n  install.packages(\"librarian\")\n}\nlibrarian::shelf(\n  ggplot2,\n  glue,\n  here,\n  readxl,\n  tidyverse,\n  utils\n)\n\nsource(here(\"R/getIMaRSData.R\"))\n\nDATA_ROOT &lt;- here(\"./data/02-SEACAR_unzipped\")\nSEACAR_ID &lt;- sub(\".*_WQ_\", \"\", params$provider_id)  # Extract the part after _WQ_\n\n\n\n\nCode\n# Load SEACAR file\n# find the .txt file (could be `Continuous WQ - N.xt` or `Discrete - N.txt`)\ntxt_file &lt;- list.files(\n  path = glue(\"{DATA_ROOT}/{params$provider_id}/\"), \n  pattern = \"\\\\.txt$\", \n  full.names = TRUE\n)\nseacar_data &lt;- read_delim(\n  txt_file,\n  delim=\"|\"\n)\n\n\nRows: 22545 Columns: 36\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \"|\"\nchr  (22): ProgramName, Habitat, IndicatorName, ParameterName, ParameterUnit...\ndbl  (12): RowID, ProgramID, IndicatorID, ParameterID, AreaID, ResultValue, ...\ndttm  (2): SampleDate, ExportVersion\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\nimars_data &lt;- getIMaRSData(params$provider_id)\n\n\nRows: 331523 Columns: 17\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (4): Source, Site, Parameter, Units\ndbl (13): ...1, Latitude, Longitude, Month, Day, Year, Value, Sample.Depth, ...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\nParameterName values malignment\nParameterName columns have different values for same data. Some columns appear to not exist in both.\n\n\nprint unique values for param name\ncat(\n  \"=== IMaRS ==========================\\n\",\n  unique(imars_data$ParameterName), \"\\n\",\n  \"=== SEACAR ==========================\\n\",\n  unique(seacar_data$ParameterName)\n)\n\n\n=== IMaRS ==========================\n Ammonium (N) Nitrate-Nitrite (N) Nitrogen- Total Kjeldahl Phosphorus- Total Turbidity Ammonia (N) \n === SEACAR ==========================\n Total Phosphorus Salinity Turbidity pH Specific Conductivity Water Temperature Total Kjeldahl Nitrogen NO2+3, Filtered Dissolved Oxygen Total Nitrogen\n\n\n\n\nCode\n# Count the number of points for each reporting provider in SEACAR and DEP data\nseacar_count &lt;- seacar_data %&gt;%\n  group_by(ParameterName) %&gt;%\n  summarise(count = n())\n\nimars_count &lt;- imars_data %&gt;%\n  group_by(ParameterName) %&gt;%\n  summarise(count = n())\n\n# Combine and display the results\ncomparison_count &lt;- full_join(seacar_count, imars_count, by = \"ParameterName\", suffix = c(\"_SEACAR\", \"_IMaRS\"))\ncomparison_count\n\n\n# A tibble: 15 × 3\n   ParameterName            count_SEACAR count_IMaRS\n   &lt;chr&gt;                           &lt;int&gt;       &lt;int&gt;\n 1 Dissolved Oxygen                 2269          NA\n 2 NO2+3, Filtered                  2227          NA\n 3 Salinity                         2309          NA\n 4 Specific Conductivity            2309          NA\n 5 Total Kjeldahl Nitrogen          2183          NA\n 6 Total Nitrogen                   2125          NA\n 7 Total Phosphorus                 2196          NA\n 8 Turbidity                        2316        2522\n 9 Water Temperature                2299          NA\n10 pH                               2312          NA\n11 Ammonia (N)                        NA         149\n12 Ammonium (N)                       NA         507\n13 Nitrate-Nitrite (N)                NA        1307\n14 Nitrogen- Total Kjeldahl           NA         876\n15 Phosphorus- Total                  NA        2812\n\n\n\n\nAmmonia distribution across all sites\n\n\nCode\n# Select relevant nutrient columns from SEACAR and DEP datasets\n# Plot distributions side by side for SEACAR and IMaRS (DEP)\n\n# Combine the datasets with a new column to identify the source\ncombined_data &lt;- bind_rows(\n  seacar_data %&gt;% \n    select(ParameterName, ResultValue) %&gt;%\n    filter(ParameterName == \"Ammonium, Filtered (NH4)\") %&gt;% \n    mutate(Source = \"SEACAR\"),\n  imars_data %&gt;% \n    select(ParameterName, ResultValue) %&gt;%\n    filter(ParameterName == \"Ammonium (N)\") %&gt;% \n    mutate(Source = \"IMaRS\")\n)\n\n# Plot side-by-side distributions with log-scaled x-axis\nggplot(combined_data, aes(x = ResultValue, fill = Source)) +\n  geom_density(alpha = 0.5) +\n  labs(title = \"Ammonium Distributions: SEACAR vs IMaRS (Log Scale)\",\n       x = \"Nutrient Value (Log Scale)\",\n       y = \"Density\",\n       fill = \"Source\") +\n  scale_x_log10() +   # Log scale on the x-axis\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\nSite ID malignment\nSite IDs in each are radically different:\n\n\nCode\nimars_sites &lt;- sort(unique(imars_data$ProgramLocationID))\nseacar_sites &lt;- sort(unique(seacar_data$ProgramLocationID))\n\ncat(\"=== IMaRS ==========================\\n\",\n  imars_sites[1:5], \"\\n\",\n  \"=== SEACAR ==========================\\n\",\n  seacar_sites[1:5], \"\\n\"\n)\n\n\n=== IMaRS ==========================\n 1 10 11 12 13 \n === SEACAR ==========================\n 15-2022-05-31 16 16-2022-05-31 17 17-2018-01-01 \n\n\nSEACAR data has many more site names\n\n\nCode\nprint(\"=== IMaRS ==========================\")\n\n\n[1] \"=== IMaRS ==========================\"\n\n\nCode\nprint(length(imars_sites))\n\n\n[1] 59\n\n\nCode\nprint(\"=== SEACAR ==========================\")\n\n\n[1] \"=== SEACAR ==========================\"\n\n\nCode\nprint(length(seacar_sites))\n\n\n[1] 91\n\n\n\n\nTODO: compare specific stations\nCannot compare within stations until station number mapping is completed (see above section about station id malignment)."
  },
  {
    "objectID": "provider_reports/provider_reports/DEP_ECA_WQ_5033.html",
    "href": "provider_reports/provider_reports/DEP_ECA_WQ_5033.html",
    "title": "DEP_ECA_WQ_5033 Report",
    "section": "",
    "text": "(code) import libraries & functions\nif (!requireNamespace(\"librarian\", quietly = TRUE)) {\n  install.packages(\"librarian\")\n}\nlibrarian::shelf(\n  ggplot2,\n  glue,\n  here,\n  readxl,\n  tidyverse,\n  utils\n)\n\nsource(here(\"R/getIMaRSData.R\"))\n\nDATA_ROOT &lt;- here(\"./data/02-SEACAR_unzipped\")\nSEACAR_ID &lt;- sub(\".*_WQ_\", \"\", params$provider_id)  # Extract the part after _WQ_\n\n\n\n\nCode\n# Load SEACAR file\n# find the .txt file (could be `Continuous WQ - N.xt` or `Discrete - N.txt`)\ntxt_file &lt;- list.files(\n  path = glue(\"{DATA_ROOT}/{params$provider_id}/\"), \n  pattern = \"\\\\.txt$\", \n  full.names = TRUE\n)\nseacar_data &lt;- read_delim(\n  txt_file,\n  delim=\"|\"\n)\n\n\nWarning: One or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\n\n\nRows: 116272 Columns: 36\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \"|\"\nchr  (21): ProgramName, Habitat, IndicatorName, ParameterName, ParameterUnit...\ndbl  (13): RowID, ProgramID, IndicatorID, ParameterID, AreaID, ResultValue, ...\ndttm  (2): SampleDate, ExportVersion\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\nimars_data &lt;- getIMaRSData(params$provider_id)\n\n\nRows: 331523 Columns: 17\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (4): Source, Site, Parameter, Units\ndbl (13): ...1, Latitude, Longitude, Month, Day, Year, Value, Sample.Depth, ...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\nParameterName values malignment\nParameterName columns have different values for same data. Some columns appear to not exist in both.\n\n\nprint unique values for param name\ncat(\n  \"=== IMaRS ==========================\\n\",\n  unique(imars_data$ParameterName), \"\\n\",\n  \"=== SEACAR ==========================\\n\",\n  unique(seacar_data$ParameterName)\n)\n\n\n=== IMaRS ==========================\n  \n === SEACAR ==========================\n Nitrite (NO2) Turbidity Total Suspended Solids Chlorophyll a, Corrected for Pheophytin Secchi Depth Total Kjeldahl Nitrogen NO2+3, Filtered Ammonium, Filtered (NH4) Total Phosphorus\n\n\n\n\nCode\n# Count the number of points for each reporting provider in SEACAR and DEP data\nseacar_count &lt;- seacar_data %&gt;%\n  group_by(ParameterName) %&gt;%\n  summarise(count = n())\n\nimars_count &lt;- imars_data %&gt;%\n  group_by(ParameterName) %&gt;%\n  summarise(count = n())\n\n# Combine and display the results\ncomparison_count &lt;- full_join(seacar_count, imars_count, by = \"ParameterName\", suffix = c(\"_SEACAR\", \"_IMaRS\"))\ncomparison_count\n\n\n# A tibble: 9 × 3\n  ParameterName                           count_SEACAR count_IMaRS\n  &lt;chr&gt;                                          &lt;int&gt;       &lt;int&gt;\n1 Ammonium, Filtered (NH4)                       14380          NA\n2 Chlorophyll a, Corrected for Pheophytin         8511          NA\n3 NO2+3, Filtered                                14379          NA\n4 Nitrite (NO2)                                  14379          NA\n5 Secchi Depth                                    7341          NA\n6 Total Kjeldahl Nitrogen                        14262          NA\n7 Total Phosphorus                               14262          NA\n8 Total Suspended Solids                         14379          NA\n9 Turbidity                                      14379          NA\n\n\n\n\nAmmonia distribution across all sites\n\n\nCode\n# Select relevant nutrient columns from SEACAR and DEP datasets\n# Plot distributions side by side for SEACAR and IMaRS (DEP)\n\n# Combine the datasets with a new column to identify the source\ncombined_data &lt;- bind_rows(\n  seacar_data %&gt;% \n    select(ParameterName, ResultValue) %&gt;%\n    filter(ParameterName == \"Ammonium, Filtered (NH4)\") %&gt;% \n    mutate(Source = \"SEACAR\"),\n  imars_data %&gt;% \n    select(ParameterName, ResultValue) %&gt;%\n    filter(ParameterName == \"Ammonium (N)\") %&gt;% \n    mutate(Source = \"IMaRS\")\n)\n\n# Plot side-by-side distributions with log-scaled x-axis\nggplot(combined_data, aes(x = ResultValue, fill = Source)) +\n  geom_density(alpha = 0.5) +\n  labs(title = \"Ammonium Distributions: SEACAR vs IMaRS (Log Scale)\",\n       x = \"Nutrient Value (Log Scale)\",\n       y = \"Density\",\n       fill = \"Source\") +\n  scale_x_log10() +   # Log scale on the x-axis\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\nSite ID malignment\nSite IDs in each are radically different:\n\n\nCode\nimars_sites &lt;- sort(unique(imars_data$ProgramLocationID))\nseacar_sites &lt;- sort(unique(seacar_data$ProgramLocationID))\n\ncat(\"=== IMaRS ==========================\\n\",\n  imars_sites[1:5], \"\\n\",\n  \"=== SEACAR ==========================\\n\",\n  seacar_sites[1:5], \"\\n\"\n)\n\n\n=== IMaRS ==========================\n NA NA NA NA NA \n === SEACAR ==========================\n WIN_21FLCRCP_BAK020 WIN_21FLCRCP_BAK021 WIN_21FLCRCP_BAK022 WIN_21FLCRCP_BAK023 WIN_21FLCRCP_BAK024 \n\n\nSEACAR data has many more site names\n\n\nCode\nprint(\"=== IMaRS ==========================\")\n\n\n[1] \"=== IMaRS ==========================\"\n\n\nCode\nprint(length(imars_sites))\n\n\n[1] 0\n\n\nCode\nprint(\"=== SEACAR ==========================\")\n\n\n[1] \"=== SEACAR ==========================\"\n\n\nCode\nprint(length(seacar_sites))\n\n\n[1] 114\n\n\n\n\nTODO: compare specific stations\nCannot compare within stations until station number mapping is completed (see above section about station id malignment)."
  },
  {
    "objectID": "provider_reports/provider_report_template.html",
    "href": "provider_reports/provider_report_template.html",
    "title": "AOML_WQ_3 Report",
    "section": "",
    "text": "(code) import libraries & functions\nif (!requireNamespace(\"librarian\", quietly = TRUE)) {\n  install.packages(\"librarian\")\n}\nlibrarian::shelf(\n  ggplot2,\n  glue,\n  here,\n  readxl,\n  tidyverse,\n  utils\n)\n\nsource(here(\"R/getIMaRSData.R\"))\n\nDATA_ROOT &lt;- here(\"./data/02-SEACAR_unzipped\")\nSEACAR_ID &lt;- sub(\".*_WQ_\", \"\", params$provider_id)  # Extract the part after _WQ_\n\n\n\n\nCode\n# Load SEACAR file\n# find the .txt file (could be `Continuous WQ - N.xt` or `Discrete - N.txt`)\ntxt_file &lt;- list.files(\n  path = glue(\"{DATA_ROOT}/{params$provider_id}/\"), \n  pattern = \"\\\\.txt$\", \n  full.names = TRUE\n)\nseacar_data &lt;- read_delim(\n  txt_file,\n  delim=\"|\"\n)\n\n\nRows: 22456 Columns: 36\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \"|\"\nchr  (22): ProgramName, Habitat, IndicatorName, ParameterName, ParameterUnit...\ndbl  (12): RowID, ProgramID, IndicatorID, ParameterID, AreaID, ResultValue, ...\ndttm  (2): SampleDate, ExportVersion\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\nimars_data &lt;- getIMaRSData(params$provider_id)\n\n\nRows: 331523 Columns: 17\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (4): Source, Site, Parameter, Units\ndbl (13): ...1, Latitude, Longitude, Month, Day, Year, Value, Sample.Depth, ...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\nParameterName values malignment\nParameterName columns have different values for same data. Some columns appear to not exist in both.\n\n\nprint unique values for param name\ncat(\n  \"=== IMaRS ==========================\\n\",\n  unique(imars_data$ParameterName), \"\\n\",\n  \"=== SEACAR ==========================\\n\",\n  unique(seacar_data$ParameterName)\n)\n\n\n=== IMaRS ==========================\n Chlorophyll a Ammonium (N) Nitrate-Nitrite (N) Nitrite (N) Nitrate (N) Orthophosphate (P) Silica \n === SEACAR ==========================\n Water Temperature Light Extinction Coefficient NO2+3, Filtered Colored Dissolved Organic Matter Chlorophyll a, Uncorrected for Pheophytin Phosphate, Filtered (PO4) Total Suspended Solids Ammonium, Filtered (NH4) pH Salinity\n\n\n\n\nCode\n# Count the number of points for each reporting provider in SEACAR and DEP data\nseacar_count &lt;- seacar_data %&gt;%\n  group_by(ParameterName) %&gt;%\n  summarise(count = n())\n\nimars_count &lt;- imars_data %&gt;%\n  group_by(ParameterName) %&gt;%\n  summarise(count = n())\n\n# Combine and display the results\ncomparison_count &lt;- full_join(seacar_count, imars_count, by = \"ParameterName\", suffix = c(\"_SEACAR\", \"_IMaRS\"))\ncomparison_count\n\n\n# A tibble: 17 × 3\n   ParameterName                             count_SEACAR count_IMaRS\n   &lt;chr&gt;                                            &lt;int&gt;       &lt;int&gt;\n 1 Ammonium, Filtered (NH4)                          3283          NA\n 2 Chlorophyll a, Uncorrected for Pheophytin         4311          NA\n 3 Colored Dissolved Organic Matter                   572          NA\n 4 Light Extinction Coefficient                       400          NA\n 5 NO2+3, Filtered                                   3025          NA\n 6 Phosphate, Filtered (PO4)                         4519          NA\n 7 Salinity                                          4813          NA\n 8 Total Suspended Solids                             711          NA\n 9 Water Temperature                                  801          NA\n10 pH                                                  21          NA\n11 Ammonium (N)                                        NA        2311\n12 Chlorophyll a                                       NA        9280\n13 Nitrate (N)                                         NA        2303\n14 Nitrate-Nitrite (N)                                 NA        1536\n15 Nitrite (N)                                         NA        1968\n16 Orthophosphate (P)                                  NA        2649\n17 Silica                                              NA        6262\n\n\n\n\nAmmonia distribution across all sites\n\n\nCode\n# Select relevant nutrient columns from SEACAR and DEP datasets\n# Plot distributions side by side for SEACAR and IMaRS (DEP)\n\n# Combine the datasets with a new column to identify the source\ncombined_data &lt;- bind_rows(\n  seacar_data %&gt;% \n    select(ParameterName, ResultValue) %&gt;%\n    filter(ParameterName == \"Ammonium, Filtered (NH4)\") %&gt;% \n    mutate(Source = \"SEACAR\"),\n  imars_data %&gt;% \n    select(ParameterName, ResultValue) %&gt;%\n    filter(ParameterName == \"Ammonium (N)\") %&gt;% \n    mutate(Source = \"IMaRS\")\n)\n\n# Plot side-by-side distributions with log-scaled x-axis\nggplot(combined_data, aes(x = ResultValue, fill = Source)) +\n  geom_density(alpha = 0.5) +\n  labs(title = \"Ammonium Distributions: SEACAR vs IMaRS (Log Scale)\",\n       x = \"Nutrient Value (Log Scale)\",\n       y = \"Density\",\n       fill = \"Source\") +\n  scale_x_log10() +   # Log scale on the x-axis\n  theme_minimal()\n\n\nWarning in scale_x_log10(): log-10 transformation introduced infinite values.\n\n\nWarning: Removed 1663 rows containing non-finite outside the scale range\n(`stat_density()`).\n\n\n\n\n\n\n\n\n\n\n\nSite ID malignment\nSite IDs in each are radically different:\n\n\nCode\nimars_sites &lt;- sort(unique(imars_data$ProgramLocationID))\nseacar_sites &lt;- sort(unique(seacar_data$ProgramLocationID))\n\ncat(\"=== IMaRS ==========================\\n\",\n  imars_sites[1:5], \"\\n\",\n  \"=== SEACAR ==========================\\n\",\n  seacar_sites[1:5], \"\\n\"\n)\n\n\n=== IMaRS ==========================\n 1 10 11 12 13 \n === SEACAR ==========================\n 1000B 1001B 1002B 1003B 1004B \n\n\nSEACAR data has many more site names\n\n\nCode\nprint(\"=== IMaRS ==========================\")\n\n\n[1] \"=== IMaRS ==========================\"\n\n\nCode\nprint(length(imars_sites))\n\n\n[1] 149\n\n\nCode\nprint(\"=== SEACAR ==========================\")\n\n\n[1] \"=== SEACAR ==========================\"\n\n\nCode\nprint(length(seacar_sites))\n\n\n[1] 4519\n\n\n\n\nTODO: compare specific stations\nCannot compare within stations until station number mapping is completed (see above section about station id malignment)."
  },
  {
    "objectID": "provider_reports/provider_reports/SERC_WQ_509.html",
    "href": "provider_reports/provider_reports/SERC_WQ_509.html",
    "title": "SERC_WQ_509 Report",
    "section": "",
    "text": "(code) import libraries & functions\nif (!requireNamespace(\"librarian\", quietly = TRUE)) {\n  install.packages(\"librarian\")\n}\nlibrarian::shelf(\n  ggplot2,\n  glue,\n  here,\n  readxl,\n  tidyverse,\n  utils\n)\n\nsource(here(\"R/getIMaRSData.R\"))\n\nDATA_ROOT &lt;- here(\"./data/02-SEACAR_unzipped\")\nSEACAR_ID &lt;- sub(\".*_WQ_\", \"\", params$provider_id)  # Extract the part after _WQ_\n\n\n\n\nCode\n# Load SEACAR file\n# find the .txt file (could be `Continuous WQ - N.xt` or `Discrete - N.txt`)\ntxt_file &lt;- list.files(\n  path = glue(\"{DATA_ROOT}/{params$provider_id}/\"), \n  pattern = \"\\\\.txt$\", \n  full.names = TRUE\n)\nseacar_data &lt;- read_delim(\n  txt_file,\n  delim=\"|\"\n)\n\n\nRows: 116139 Columns: 36\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \"|\"\nchr  (20): ProgramName, Habitat, IndicatorName, ParameterName, ParameterUnit...\ndbl  (14): RowID, ProgramID, IndicatorID, ParameterID, ProgramLocationID, Ar...\ndttm  (2): SampleDate, ExportVersion\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\nimars_data &lt;- getIMaRSData(params$provider_id)\n\n\nRows: 331523 Columns: 17\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (4): Source, Site, Parameter, Units\ndbl (13): ...1, Latitude, Longitude, Month, Day, Year, Value, Sample.Depth, ...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\nParameterName values malignment\nParameterName columns have different values for same data. Some columns appear to not exist in both.\n\n\nprint unique values for param name\ncat(\n  \"=== IMaRS ==========================\\n\",\n  unique(imars_data$ParameterName), \"\\n\",\n  \"=== SEACAR ==========================\\n\",\n  unique(seacar_data$ParameterName)\n)\n\n\n=== IMaRS ==========================\n  \n === SEACAR ==========================\n NO2+3, Filtered Total Phosphorus Ammonium, Filtered (NH4) Chlorophyll a, Uncorrected for Pheophytin Turbidity Salinity Water Temperature Total Nitrogen Dissolved Oxygen pH Light Extinction Coefficient\n\n\n\n\nCode\n# Count the number of points for each reporting provider in SEACAR and DEP data\nseacar_count &lt;- seacar_data %&gt;%\n  group_by(ParameterName) %&gt;%\n  summarise(count = n())\n\nimars_count &lt;- imars_data %&gt;%\n  group_by(ParameterName) %&gt;%\n  summarise(count = n())\n\n# Combine and display the results\ncomparison_count &lt;- full_join(seacar_count, imars_count, by = \"ParameterName\", suffix = c(\"_SEACAR\", \"_IMaRS\"))\ncomparison_count\n\n\n# A tibble: 11 × 3\n   ParameterName                             count_SEACAR count_IMaRS\n   &lt;chr&gt;                                            &lt;int&gt;       &lt;int&gt;\n 1 Ammonium, Filtered (NH4)                          9261          NA\n 2 Chlorophyll a, Uncorrected for Pheophytin         9241          NA\n 3 Dissolved Oxygen                                 18215          NA\n 4 Light Extinction Coefficient                       822          NA\n 5 NO2+3, Filtered                                   9300          NA\n 6 Salinity                                         18075          NA\n 7 Total Nitrogen                                    9296          NA\n 8 Total Phosphorus                                  9249          NA\n 9 Turbidity                                         9250          NA\n10 Water Temperature                                18085          NA\n11 pH                                                5345          NA\n\n\n\n\nAmmonia distribution across all sites\n\n\nCode\n# Select relevant nutrient columns from SEACAR and DEP datasets\n# Plot distributions side by side for SEACAR and IMaRS (DEP)\n\n# Combine the datasets with a new column to identify the source\ncombined_data &lt;- bind_rows(\n  seacar_data %&gt;% \n    select(ParameterName, ResultValue) %&gt;%\n    filter(ParameterName == \"Ammonium, Filtered (NH4)\") %&gt;% \n    mutate(Source = \"SEACAR\"),\n  imars_data %&gt;% \n    select(ParameterName, ResultValue) %&gt;%\n    filter(ParameterName == \"Ammonium (N)\") %&gt;% \n    mutate(Source = \"IMaRS\")\n)\n\n# Plot side-by-side distributions with log-scaled x-axis\nggplot(combined_data, aes(x = ResultValue, fill = Source)) +\n  geom_density(alpha = 0.5) +\n  labs(title = \"Ammonium Distributions: SEACAR vs IMaRS (Log Scale)\",\n       x = \"Nutrient Value (Log Scale)\",\n       y = \"Density\",\n       fill = \"Source\") +\n  scale_x_log10() +   # Log scale on the x-axis\n  theme_minimal()\n\n\nWarning in scale_x_log10(): log-10 transformation introduced infinite values.\n\n\nWarning: Removed 3 rows containing non-finite outside the scale range\n(`stat_density()`).\n\n\n\n\n\n\n\n\n\n\n\nSite ID malignment\nSite IDs in each are radically different:\n\n\nCode\nimars_sites &lt;- sort(unique(imars_data$ProgramLocationID))\nseacar_sites &lt;- sort(unique(seacar_data$ProgramLocationID))\n\ncat(\"=== IMaRS ==========================\\n\",\n  imars_sites[1:5], \"\\n\",\n  \"=== SEACAR ==========================\\n\",\n  seacar_sites[1:5], \"\\n\"\n)\n\n\n=== IMaRS ==========================\n NA NA NA NA NA \n === SEACAR ==========================\n 1 2 3 4 68 \n\n\nSEACAR data has many more site names\n\n\nCode\nprint(\"=== IMaRS ==========================\")\n\n\n[1] \"=== IMaRS ==========================\"\n\n\nCode\nprint(length(imars_sites))\n\n\n[1] 0\n\n\nCode\nprint(\"=== SEACAR ==========================\")\n\n\n[1] \"=== SEACAR ==========================\"\n\n\nCode\nprint(length(seacar_sites))\n\n\n[1] 47\n\n\n\n\nTODO: compare specific stations\nCannot compare within stations until station number mapping is completed (see above section about station id malignment)."
  },
  {
    "objectID": "provider_reports/provider_reports/BBAP_WQ_5026.html",
    "href": "provider_reports/provider_reports/BBAP_WQ_5026.html",
    "title": "BBAP_WQ_5026 Report",
    "section": "",
    "text": "(code) import libraries & functions\nif (!requireNamespace(\"librarian\", quietly = TRUE)) {\n  install.packages(\"librarian\")\n}\nlibrarian::shelf(\n  ggplot2,\n  glue,\n  here,\n  readxl,\n  tidyverse,\n  utils\n)\n\nsource(here(\"R/getIMaRSData.R\"))\n\nDATA_ROOT &lt;- here(\"./data/02-SEACAR_unzipped\")\nSEACAR_ID &lt;- sub(\".*_WQ_\", \"\", params$provider_id)  # Extract the part after _WQ_\n\n\n\n\nCode\n# Load SEACAR file\n# find the .txt file (could be `Continuous WQ - N.xt` or `Discrete - N.txt`)\ntxt_file &lt;- list.files(\n  path = glue(\"{DATA_ROOT}/{params$provider_id}/\"), \n  pattern = \"\\\\.txt$\", \n  full.names = TRUE\n)\nseacar_data &lt;- read_delim(\n  txt_file,\n  delim=\"|\"\n)\n\n\nRows: 17131 Columns: 36\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \"|\"\nchr  (22): ProgramName, Habitat, IndicatorName, ParameterName, ParameterUnit...\ndbl  (12): RowID, ProgramID, IndicatorID, ParameterID, AreaID, ResultValue, ...\ndttm  (2): SampleDate, ExportVersion\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\nimars_data &lt;- getIMaRSData(params$provider_id)\n\n\nRows: 331523 Columns: 17\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (4): Source, Site, Parameter, Units\ndbl (13): ...1, Latitude, Longitude, Month, Day, Year, Value, Sample.Depth, ...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\nParameterName values malignment\nParameterName columns have different values for same data. Some columns appear to not exist in both.\n\n\nprint unique values for param name\ncat(\n  \"=== IMaRS ==========================\\n\",\n  unique(imars_data$ParameterName), \"\\n\",\n  \"=== SEACAR ==========================\\n\",\n  unique(seacar_data$ParameterName)\n)\n\n\n=== IMaRS ==========================\n Chlorophyll a Ammonium (N) Nitrate-Nitrite (N) Nitrogen- Total Kjeldahl Phosphorus- Total Ammonia (N) \n === SEACAR ==========================\n Chlorophyll a, Uncorrected for Pheophytin Secchi Depth Chlorophyll a, Corrected for Pheophytin Total Suspended Solids Total Phosphorus Total Kjeldahl Nitrogen NO2+3, Filtered Dissolved Oxygen Dissolved Oxygen Saturation pH Salinity Turbidity Water Temperature Specific Conductivity Ammonium, Filtered (NH4) Total Nitrogen\n\n\n\n\nCode\n# Count the number of points for each reporting provider in SEACAR and DEP data\nseacar_count &lt;- seacar_data %&gt;%\n  group_by(ParameterName) %&gt;%\n  summarise(count = n())\n\nimars_count &lt;- imars_data %&gt;%\n  group_by(ParameterName) %&gt;%\n  summarise(count = n())\n\n# Combine and display the results\ncomparison_count &lt;- full_join(seacar_count, imars_count, by = \"ParameterName\", suffix = c(\"_SEACAR\", \"_IMaRS\"))\ncomparison_count\n\n\n# A tibble: 22 × 3\n   ParameterName                             count_SEACAR count_IMaRS\n   &lt;chr&gt;                                            &lt;int&gt;       &lt;int&gt;\n 1 Ammonium, Filtered (NH4)                          1147          NA\n 2 Chlorophyll a, Corrected for Pheophytin            287          NA\n 3 Chlorophyll a, Uncorrected for Pheophytin          410          NA\n 4 Dissolved Oxygen                                  1442          NA\n 5 Dissolved Oxygen Saturation                        491          NA\n 6 NO2+3, Filtered                                   1511          NA\n 7 Salinity                                           436          NA\n 8 Secchi Depth                                       426          NA\n 9 Specific Conductivity                             1091          NA\n10 Total Kjeldahl Nitrogen                           1520          NA\n# ℹ 12 more rows\n\n\n\n\nAmmonia distribution across all sites\n\n\nCode\n# Select relevant nutrient columns from SEACAR and DEP datasets\n# Plot distributions side by side for SEACAR and IMaRS (DEP)\n\n# Combine the datasets with a new column to identify the source\ncombined_data &lt;- bind_rows(\n  seacar_data %&gt;% \n    select(ParameterName, ResultValue) %&gt;%\n    filter(ParameterName == \"Ammonium, Filtered (NH4)\") %&gt;% \n    mutate(Source = \"SEACAR\"),\n  imars_data %&gt;% \n    select(ParameterName, ResultValue) %&gt;%\n    filter(ParameterName == \"Ammonium (N)\") %&gt;% \n    mutate(Source = \"IMaRS\")\n)\n\n# Plot side-by-side distributions with log-scaled x-axis\nggplot(combined_data, aes(x = ResultValue, fill = Source)) +\n  geom_density(alpha = 0.5) +\n  labs(title = \"Ammonium Distributions: SEACAR vs IMaRS (Log Scale)\",\n       x = \"Nutrient Value (Log Scale)\",\n       y = \"Density\",\n       fill = \"Source\") +\n  scale_x_log10() +   # Log scale on the x-axis\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\nSite ID malignment\nSite IDs in each are radically different:\n\n\nCode\nimars_sites &lt;- sort(unique(imars_data$ProgramLocationID))\nseacar_sites &lt;- sort(unique(seacar_data$ProgramLocationID))\n\ncat(\"=== IMaRS ==========================\\n\",\n  imars_sites[1:5], \"\\n\",\n  \"=== SEACAR ==========================\\n\",\n  seacar_sites[1:5], \"\\n\"\n)\n\n\n=== IMaRS ==========================\n BB14 BH22 CWA2 CWA4 CWA5 \n === SEACAR ==========================\n BB14 DM00 DM08 DM28 FK01 \n\n\nSEACAR data has many more site names\n\n\nCode\nprint(\"=== IMaRS ==========================\")\n\n\n[1] \"=== IMaRS ==========================\"\n\n\nCode\nprint(length(imars_sites))\n\n\n[1] 25\n\n\nCode\nprint(\"=== SEACAR ==========================\")\n\n\n[1] \"=== SEACAR ==========================\"\n\n\nCode\nprint(length(seacar_sites))\n\n\n[1] 58\n\n\n\n\nTODO: compare specific stations\nCannot compare within stations until station number mapping is completed (see above section about station id malignment)."
  },
  {
    "objectID": "provider_reports/provider_reports/AOML_WQ_3.html",
    "href": "provider_reports/provider_reports/AOML_WQ_3.html",
    "title": "AOML_WQ_3 Report",
    "section": "",
    "text": "(code) import libraries & functions\nif (!requireNamespace(\"librarian\", quietly = TRUE)) {\n  install.packages(\"librarian\")\n}\nlibrarian::shelf(\n  ggplot2,\n  glue,\n  here,\n  readxl,\n  tidyverse,\n  utils\n)\n\nsource(here(\"R/getIMaRSData.R\"))\n\nDATA_ROOT &lt;- here(\"./data/02-SEACAR_unzipped\")\nSEACAR_ID &lt;- sub(\".*_WQ_\", \"\", params$provider_id)  # Extract the part after _WQ_\n\n\n\n\nCode\n# Load SEACAR file\n# find the .txt file (could be `Continuous WQ - N.xt` or `Discrete - N.txt`)\ntxt_file &lt;- list.files(\n  path = glue(\"{DATA_ROOT}/{params$provider_id}/\"), \n  pattern = \"\\\\.txt$\", \n  full.names = TRUE\n)\nseacar_data &lt;- read_delim(\n  txt_file,\n  delim=\"|\"\n)\n\n\nRows: 22456 Columns: 36\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \"|\"\nchr  (22): ProgramName, Habitat, IndicatorName, ParameterName, ParameterUnit...\ndbl  (12): RowID, ProgramID, IndicatorID, ParameterID, AreaID, ResultValue, ...\ndttm  (2): SampleDate, ExportVersion\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\nimars_data &lt;- getIMaRSData(params$provider_id)\n\n\nRows: 331523 Columns: 17\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (4): Source, Site, Parameter, Units\ndbl (13): ...1, Latitude, Longitude, Month, Day, Year, Value, Sample.Depth, ...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\nParameterName values malignment\nParameterName columns have different values for same data. Some columns appear to not exist in both.\n\n\nprint unique values for param name\ncat(\n  \"=== IMaRS ==========================\\n\",\n  unique(imars_data$ParameterName), \"\\n\",\n  \"=== SEACAR ==========================\\n\",\n  unique(seacar_data$ParameterName)\n)\n\n\n=== IMaRS ==========================\n Chlorophyll a Ammonium (N) Nitrate-Nitrite (N) Nitrite (N) Nitrate (N) Orthophosphate (P) Silica \n === SEACAR ==========================\n Water Temperature Light Extinction Coefficient NO2+3, Filtered Colored Dissolved Organic Matter Chlorophyll a, Uncorrected for Pheophytin Phosphate, Filtered (PO4) Total Suspended Solids Ammonium, Filtered (NH4) pH Salinity\n\n\n\n\nCode\n# Count the number of points for each reporting provider in SEACAR and DEP data\nseacar_count &lt;- seacar_data %&gt;%\n  group_by(ParameterName) %&gt;%\n  summarise(count = n())\n\nimars_count &lt;- imars_data %&gt;%\n  group_by(ParameterName) %&gt;%\n  summarise(count = n())\n\n# Combine and display the results\ncomparison_count &lt;- full_join(seacar_count, imars_count, by = \"ParameterName\", suffix = c(\"_SEACAR\", \"_IMaRS\"))\ncomparison_count\n\n\n# A tibble: 17 × 3\n   ParameterName                             count_SEACAR count_IMaRS\n   &lt;chr&gt;                                            &lt;int&gt;       &lt;int&gt;\n 1 Ammonium, Filtered (NH4)                          3283          NA\n 2 Chlorophyll a, Uncorrected for Pheophytin         4311          NA\n 3 Colored Dissolved Organic Matter                   572          NA\n 4 Light Extinction Coefficient                       400          NA\n 5 NO2+3, Filtered                                   3025          NA\n 6 Phosphate, Filtered (PO4)                         4519          NA\n 7 Salinity                                          4813          NA\n 8 Total Suspended Solids                             711          NA\n 9 Water Temperature                                  801          NA\n10 pH                                                  21          NA\n11 Ammonium (N)                                        NA        2311\n12 Chlorophyll a                                       NA        9280\n13 Nitrate (N)                                         NA        2303\n14 Nitrate-Nitrite (N)                                 NA        1536\n15 Nitrite (N)                                         NA        1968\n16 Orthophosphate (P)                                  NA        2649\n17 Silica                                              NA        6262\n\n\n\n\nAmmonia distribution across all sites\n\n\nCode\n# Select relevant nutrient columns from SEACAR and DEP datasets\n# Plot distributions side by side for SEACAR and IMaRS (DEP)\n\n# Combine the datasets with a new column to identify the source\ncombined_data &lt;- bind_rows(\n  seacar_data %&gt;% \n    select(ParameterName, ResultValue) %&gt;%\n    filter(ParameterName == \"Ammonium, Filtered (NH4)\") %&gt;% \n    mutate(Source = \"SEACAR\"),\n  imars_data %&gt;% \n    select(ParameterName, ResultValue) %&gt;%\n    filter(ParameterName == \"Ammonium (N)\") %&gt;% \n    mutate(Source = \"IMaRS\")\n)\n\n# Plot side-by-side distributions with log-scaled x-axis\nggplot(combined_data, aes(x = ResultValue, fill = Source)) +\n  geom_density(alpha = 0.5) +\n  labs(title = \"Ammonium Distributions: SEACAR vs IMaRS (Log Scale)\",\n       x = \"Nutrient Value (Log Scale)\",\n       y = \"Density\",\n       fill = \"Source\") +\n  scale_x_log10() +   # Log scale on the x-axis\n  theme_minimal()\n\n\nWarning in scale_x_log10(): log-10 transformation introduced infinite values.\n\n\nWarning: Removed 1663 rows containing non-finite outside the scale range\n(`stat_density()`).\n\n\n\n\n\n\n\n\n\n\n\nSite ID malignment\nSite IDs in each are radically different:\n\n\nCode\nimars_sites &lt;- sort(unique(imars_data$ProgramLocationID))\nseacar_sites &lt;- sort(unique(seacar_data$ProgramLocationID))\n\ncat(\"=== IMaRS ==========================\\n\",\n  imars_sites[1:5], \"\\n\",\n  \"=== SEACAR ==========================\\n\",\n  seacar_sites[1:5], \"\\n\"\n)\n\n\n=== IMaRS ==========================\n 1 10 11 12 13 \n === SEACAR ==========================\n 1000B 1001B 1002B 1003B 1004B \n\n\nSEACAR data has many more site names\n\n\nCode\nprint(\"=== IMaRS ==========================\")\n\n\n[1] \"=== IMaRS ==========================\"\n\n\nCode\nprint(length(imars_sites))\n\n\n[1] 149\n\n\nCode\nprint(\"=== SEACAR ==========================\")\n\n\n[1] \"=== SEACAR ==========================\"\n\n\nCode\nprint(length(seacar_sites))\n\n\n[1] 4519\n\n\n\n\nTODO: compare specific stations\nCannot compare within stations until station number mapping is completed (see above section about station id malignment)."
  },
  {
    "objectID": "provider_reports/provider_reports.html",
    "href": "provider_reports/provider_reports.html",
    "title": "Provider Reports",
    "section": "",
    "text": "param name misalignment (based on AOML data)\nA mapping of names manually creating using AOML data is below:\n\n\n\nIMaRS Name\nSEACAR name\n\n\n\n\nAmmonium (N)\nAmmonium, Filtered (NH4)\n\n\nChlorophyll a\nChlorophyll a, Uncorrected for Pheophytin\n\n\n-\nColored Dissolved Organic Matter\n\n\n-\nLight Extinction Coefficient\n\n\nNitrate (N)\n-\n\n\nNitrate-Nitrite (N)\nNO2+3, Filtered\n\n\nNitrite (N)\n-\n\n\nOrthophosphate (P)\n\n\n\n-\npH\n\n\n-\nPhosphate, Filtered (PO4)\n\n\n-\nSalinity\n\n\nSilica\n\n\n\n-\nTotal Suspended Solids\n\n\n-\nWater Temperature\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAOML_WQ_3 Report\n\n\nDEP Water Quality Data Report\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nBBAP_WQ_5026 Report\n\n\nDEP Water Quality Data Report\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nBBWW_WQ_5077 Report\n\n\nDEP Water Quality Data Report\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDEP_ECA_WQ_5033 Report\n\n\nDEP Water Quality Data Report\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMIAMI_BEACH_WQ_4058 Report\n\n\nDEP Water Quality Data Report\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSERC_FKNMS_WQ_297 Report\n\n\nDEP Water Quality Data Report\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSERC_WQ_509 Report\n\n\nDEP Water Quality Data Report\n\n\n\n\n\n\n\n\n\n\n\n\nNo matching items"
  }
]